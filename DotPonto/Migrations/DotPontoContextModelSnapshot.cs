// <auto-generated />
using System;
using DotPonto.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DotPonto.Migrations
{
    [DbContext(typeof(DotPontoContext))]
    partial class DotPontoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DotPonto.Models.Empresas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CNAE")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EmpEndBairro")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EmpEndCEP")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EmpEndCidade")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EmpEndNumero")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EmpEndUF")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EmpEndereco")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("InscricaoEstadual")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("InscricaoMunicipal")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("DotPonto.Models.Filiais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CNAE")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EmpEndBairro")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EmpEndCEP")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EmpEndCidade")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EmpEndNumero")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EmpEndUF")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EmpEndereco")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("EmpresasId")
                        .HasColumnType("int");

                    b.Property<string>("InscricaoEstadual")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("InscricaoMunicipal")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("EmpresasId");

                    b.ToTable("Filiais");
                });

            modelBuilder.Entity("DotPonto.Models.Funcionarios", b =>
                {
                    b.Property<int>("FuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("EmpresasId")
                        .HasColumnType("int");

                    b.Property<int>("FiliaisId")
                        .HasColumnType("int");

                    b.Property<string>("FuEndBairro")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FuEndCidade")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FuEndNumero")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FuEndRua")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FuEndUF")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("LotacaoId")
                        .HasColumnType("int");

                    b.Property<string>("Mae")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PIS")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Pai")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RG")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("varchar(1) CHARACTER SET utf8mb4");

                    b.HasKey("FuId");

                    b.HasIndex("EmpresasId");

                    b.HasIndex("FiliaisId");

                    b.HasIndex("LotacaoId");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("DotPonto.Models.Lotacao", b =>
                {
                    b.Property<int>("LotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("LotNome")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("LotId");

                    b.ToTable("Lotacao");
                });

            modelBuilder.Entity("DotPonto.Models.Usuarios", b =>
                {
                    b.Property<int>("UsuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Senha")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Usuario")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("UsuId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("DotPonto.Models.Filiais", b =>
                {
                    b.HasOne("DotPonto.Models.Empresas", "Empresas")
                        .WithMany("Filial")
                        .HasForeignKey("EmpresasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DotPonto.Models.Funcionarios", b =>
                {
                    b.HasOne("DotPonto.Models.Empresas", "Empresas")
                        .WithMany()
                        .HasForeignKey("EmpresasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotPonto.Models.Filiais", "Filiais")
                        .WithMany()
                        .HasForeignKey("FiliaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotPonto.Models.Lotacao", "Lotacao")
                        .WithMany()
                        .HasForeignKey("LotacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
